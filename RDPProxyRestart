cls
try
{
    $api = "https://mercury/SecretServer/api/v1"
    $tokenRoute = "https://mercury/SecretServer/oauth2/token";

    $creds = @{
        username = "APIUSER"
        password = "APIPASSWORD"
        grant_type = "password"
    }        

    $token = ""
    $response = Invoke-RestMethod $tokenRoute -Method Post -Body $creds
    $token = $response.access_token;

    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", "Bearer $token")  

  
    $result = Invoke-RestMethod "$api/proxy/rdp/config" -Headers $headers 
  
  write-host "EnableRdpProxy"

  write-host $result.enableRdpProxy

  $bodyupdate = "{enableRdpProxy=False;}"
  $bodyupdateAsJSON = @{ enableRdpProxy='False'} | ConvertTo-Json

     $patcher = Invoke-RestMethod "$api/proxy/rdp/config" -method patch -Headers $headers  -Body $bodyupdateAsJSON -ContentType application/json
  
  write-host $patcher.enableRdpProxy
Start-Sleep -s 5
    $bodyupdateAsJSON = @{ enableRdpProxy='True'} | ConvertTo-Json

     $patcher = Invoke-RestMethod "$api/proxy/rdp/config" -method patch -Headers $headers  -Body $bodyupdateAsJSON -ContentType application/json
  
  write-host $patcher.enableRdpProxy
Start-Sleep -s 5


      $result = Invoke-RestMethod "$api/proxy/rdp/config" -Headers $headers 
  
  write-host $result.enableRdpProxy

  }
catch [System.Net.WebException]
{
    Write-Host "----- Exception -----"
    Write-Host  $_.Exception
    Write-Host  $_.Exception.Response.StatusCode
    Write-Host  $_.Exception.Response.StatusDescription
    $result = $_.Exception.Response.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($result)
    $reader.BaseStream.Position = 0
    $reader.DiscardBufferedData()
    $responseBody = $reader.ReadToEnd() | ConvertFrom-Json
    Write-Host  $responseBody.errorCode " - " $responseBody.message
    foreach($modelState in $responseBody.modelState)
    {
        $modelState
    }
