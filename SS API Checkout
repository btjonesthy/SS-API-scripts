cls

try
{

    $api = "https://vault/api/v1"
    $tokenRoute = "https://vault/oauth2/token";

    $creds = @{
        username = "solar\apirunner"
        password = "passwordhere"
        grant_type = "password"
    }        

    $token = ""
    $response = Invoke-RestMethod $tokenRoute -Method Post -Body $creds
    $token = $response.access_token;

    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", "Bearer $token")

     $result = Invoke-RestMethod "$api/secrets/1067/heartbeat" -Headers $headers  -method Post
     Write-Host ">Start:"
     write-host "checkedout=" $result.checkedOut
     Start-Sleep -s 3

     $result = Invoke-RestMethod "$api/secrets/1067/check-out" -Headers $headers -method Post
     Write-Host ">Do Check-out"
     write-host $result
     Start-Sleep -s 3

       $result = Invoke-RestMethod "$api/secrets/1067/heartbeat" -Headers $headers  -method Post
     Write-Host ">Run Heartbeat"
     write-host "checkedout=" $result.checkedOut
     Start-Sleep -s 3
  
    $result = Invoke-RestMethod "$api/secrets/1067/fields/password" -Headers $headers  
     Write-Host ">Get Password"
     write-host $result
     Start-Sleep -s 3
       

    $result = Invoke-RestMethod "$api/secrets/1067/check-in" -Headers $headers  -method Post
     Write-Host ">Do Check-in"
     write-host "checkedout=" $result.checkedOut
      Start-Sleep -s 3
   
       $result = Invoke-RestMethod "$api/secrets/1067/heartbeat" -Headers $headers  -method Post
     Write-Host "`heartbeat"
     write-host "checkedout=" $result.checkedOut
     Start-Sleep -s 3

}
catch [System.Net.WebException]
{
    Write-Host "----- Exception -----"
    Write-Host  $_.Exception
    Write-Host  $_.Exception.Response.StatusCode
    Write-Host  $_.Exception.Response.StatusDescription
    $result = $_.Exception.Response.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($result)
    $reader.BaseStream.Position = 0
    $reader.DiscardBufferedData()
    $responseBody = $reader.ReadToEnd() | ConvertFrom-Json
    Write-Host  $responseBody.errorCode " - " $responseBody.message
    foreach($modelState in $responseBody.modelState)
    {
        $modelState
    }
}
