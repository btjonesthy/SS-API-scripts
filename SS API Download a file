
cls

try
{

    $api = "https://vault/api/v1"
    $tokenRoute = "https://vault/oauth2/token";

    $creds = @{
        username = "solar\apirunner"
        password = "passwordhere"
        grant_type = "password"
    }        

    $token = ""
    $response = Invoke-RestMethod $tokenRoute -Method Post -Body $creds
    $token = $response.access_token;

    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", "Bearer $token")

$resultname = Invoke-RestMethod "$api/secrets/27/" -Headers $headers 
$rn=$resultname.items[1].filename
write-output $resultname.items[1].filename


$url = "$api/secrets/27/fields/certificate-file"  
$output = "$PSScriptRoot\$rn"
$start_time = Get-Date

Invoke-WebRequest -Uri $url -Headers $headers -OutFile $output
Write-Output "Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)"



   
}
catch [System.Net.WebException]
{
    Write-Host "----- Exception -----"
    Write-Host  $_.Exception
    Write-Host  $_.Exception.Response.StatusCode
    Write-Host  $_.Exception.Response.StatusDescription
    $result = $_.Exception.Response.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($result)
    $reader.BaseStream.Position = 0
    $reader.DiscardBufferedData()
    $responseBody = $reader.ReadToEnd() | ConvertFrom-Json
    Write-Host  $responseBody.errorCode " - " $responseBody.message
    foreach($modelState in $responseBody.modelState)
    {
        $modelState
    }
}



