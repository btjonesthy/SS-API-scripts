cls
try
{
    $api = "https://mercury/SecretServer/api/v1"
    $tokenRoute = "https://mercury/SecretServer/oauth2/token";

    $creds = @{
        username = "APIUSER"
        password = "APIPASSWORD"
        grant_type = "password"
    }        

    $token = ""
    $response = Invoke-RestMethod $tokenRoute -Method Post -Body $creds
    $token = $response.access_token;

    $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
    $headers.Add("Authorization", "Bearer $token")  

    $searchString="12"
    $filters = "?filter.SearchTypes=SecretItems&filter.secretIds=$searchString" 
    $result = Invoke-RestMethod "$api/recorded-sessions$filters" -Headers $headers 
    $sess=$result.records[$results.records.count].launcherSessionGuid

    $output = "$PSScriptRoot\$sess"       
    $result1 = Invoke-RestMethod "$api/recorded-sessions/$sess/session-recordings" -Headers $headers -OutFile $output
}
catch [System.Net.WebException]
{
    Write-Host "----- Exception -----"
    Write-Host  $_.Exception
    Write-Host  $_.Exception.Response.StatusCode
    Write-Host  $_.Exception.Response.StatusDescription
    $result = $_.Exception.Response.GetResponseStream()
    $reader = New-Object System.IO.StreamReader($result)
    $reader.BaseStream.Position = 0
    $reader.DiscardBufferedData()
    $responseBody = $reader.ReadToEnd() | ConvertFrom-Json
    Write-Host  $responseBody.errorCode " - " $responseBody.message
    foreach($modelState in $responseBody.modelState)
    {
        $modelState
    }
}
